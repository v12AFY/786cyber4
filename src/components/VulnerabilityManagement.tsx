import React, { useState } from 'react';
import { 
  AlertTriangle, 
  Shield, 
  CheckCircle2, 
  Clock, 
  TrendingDown,
  Filter,
  Search,
  Download,
  Zap,
  ExternalLink,
  Target,
  Server,
  Monitor,
  Globe,
  Bug,
  AlertCircle
} from 'lucide-react';

const VulnerabilityManagement = () => {
  const [activeTab, setActiveTab] = useState('internal');
  const [severityFilter, setSeverityFilter] = useState('all');

  const vulnerabilityStats = [
    {
      title: 'Critical Vulnerabilities',
      value: '12',
      change: '-4',
      trend: 'down',
      icon: AlertTriangle,
      color: 'text-red-600',
      bgColor: 'bg-red-50'
    },
    {
      title: 'High Risk Assets',
      value: '28',
      change: '-8',
      trend: 'down',
      icon: Shield,
      color: 'text-orange-600',
      bgColor: 'bg-orange-50'
    },
    {
      title: 'Patched This Month',
      value: '156',
      change: '+45',
      trend: 'up',
      icon: CheckCircle2,
      color: 'text-green-600',
      bgColor: 'bg-green-50'
    },
    {
      title: 'Avg. Remediation Time',
      value: '7d',
      change: '-2d',
      trend: 'down',
      icon: Clock,
      color: 'text-blue-600',
      bgColor: 'bg-blue-50'
    }
  ];

  const internalVulnerabilities = [
    {
      id: 'CVE-2024-0001',
      title: 'Windows RCE Vulnerability',
      description: 'Remote code execution in Windows Print Spooler service',
      severity: 'Critical',
      cvssScore: 9.8,
      affectedAssets: ['DC-Server-01', 'Finance-WS-05', 'HR-WS-12'],
      category: 'Operating System',
      publishedDate: '2024-01-10',
      discoveredDate: '2024-01-12',
      status: 'Open',
      exploitAvailable: true,
      solution: 'Apply Windows Security Update KB5034441'
    },
    {
      id: 'CVE-2023-9876',
      title: 'Apache HTTP Server Buffer Overflow',
      description: 'Buffer overflow vulnerability in Apache HTTP Server',
      severity: 'High',
      cvssScore: 8.1,
      affectedAssets: ['Web-Server-01'],
      category: 'Web Application',
      publishedDate: '2023-12-15',
      discoveredDate: '2024-01-05',
      status: 'In Progress',
      exploitAvailable: false,
      solution: 'Upgrade to Apache HTTP Server 2.4.58'
    },
    {
      id: 'CVE-2023-5432',
      title: 'MySQL Privilege Escalation',
      description: 'Local privilege escalation in MySQL Server',
      severity: 'Medium',
      cvssScore: 6.7,
      affectedAssets: ['DB-Server-01'],
      category: 'Database',
      publishedDate: '2023-11-20',
      discoveredDate: '2024-01-08',
      status: 'Resolved',
      exploitAvailable: false,
      solution: 'Update to MySQL 8.0.35'
    }
  ];

  const externalVulnerabilities = [
    {
      domain: 'company.com',
      findings: [
        {
          title: 'SSL Certificate Weak Cipher Suite',
          severity: 'Medium',
          description: 'Server supports weak SSL cipher suites',
          remediation: 'Update SSL configuration to remove weak ciphers'
        },
        {
          title: 'Missing Security Headers',
          severity: 'Low',
          description: 'Missing HSTS and CSP headers',
          remediation: 'Implement security headers in web server configuration'
        }
      ]
    },
    {
      domain: 'api.company.com',
      findings: [
        {
          title: 'Exposed API Documentation',
          severity: 'High',
          description: 'API documentation accessible without authentication',
          remediation: 'Restrict access to API documentation'
        },
        {
          title: 'Rate Limiting Not Configured',
          severity: 'Medium',
          description: 'API endpoints lack rate limiting protection',
          remediation: 'Implement rate limiting on API endpoints'
        }
      ]
    }
  ];

  const remediationPlaybooks = [
    {
      title: 'Windows Critical Updates',
      description: 'Automated patching workflow for Windows systems',
      estimatedTime: '2-4 hours',
      difficulty: 'Low',
      affectedSystems: 45,
      automationAvailable: true
    },
    {
      title: 'Web Application Security',
      description: 'Secure configuration for web servers and applications',
      estimatedTime: '4-8 hours',
      difficulty: 'Medium',
      affectedSystems: 8,
      automationAvailable: false
    },
    {
      title: 'Database Hardening',
      description: 'Security hardening for database servers',
      estimatedTime: '1-2 hours',
      difficulty: 'Medium',
      affectedSystems: 3,
      automationAvailable: true
    }
  ];

  const getSeverityColor = (severity: string) => {
    switch (severity.toLowerCase()) {
      case 'critical':
        return 'bg-red-600 text-white';
      case 'high':
        return 'bg-red-100 text-red-700';
      case 'medium':
        return 'bg-yellow-100 text-yellow-700';
      case 'low':
        return 'bg-green-100 text-green-700';
      default:
        return 'bg-gray-100 text-gray-700';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status.toLowerCase()) {
      case 'open':
        return 'bg-red-100 text-red-700';
      case 'in progress':
        return 'bg-yellow-100 text-yellow-700';
      case 'resolved':
        return 'bg-green-100 text-green-700';
      default:
        return 'bg-gray-100 text-gray-700';
    }
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="bg-white rounded-lg shadow-sm border border-slate-200 p-6">
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-2xl font-bold text-slate-900">Vulnerability Management</h1>
            <p className="text-slate-600 mt-1">
              Comprehensive vulnerability scanning and remediation management
            </p>
          </div>
          <div className="flex items-center space-x-3">
            <button className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors flex items-center space-x-2">
              <Zap className="h-4 w-4" />
              <span>Run Scan</span>
            </button>
            <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2">
              <Download className="h-4 w-4" />
              <span>Export Report</span>
            </button>
          </div>
        </div>
      </div>

      {/* Vulnerability Statistics */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        {vulnerabilityStats.map((stat, index) => {
          const Icon = stat.icon;
          return (
            <div key={index} className="bg-white rounded-lg shadow-sm border border-slate-200 p-6 hover:shadow-md transition-shadow">
              <div className="flex items-center justify-between">
                <div className={`p-3 rounded-lg ${stat.bgColor}`}>
                  <Icon className={`h-6 w-6 ${stat.color}`} />
                </div>
                <div className={`flex items-center space-x-1 text-sm ${
                  stat.trend === 'up' ? 'text-red-600' : 'text-green-600'
                }`}>
                  <TrendingDown className={`h-4 w-4 ${stat.trend === 'up' ? 'rotate-180' : ''}`} />
                  <span>{stat.change}</span>
                </div>
              </div>
              <div className="mt-4">
                <h3 className="text-sm font-medium text-slate-600">{stat.title}</h3>
                <p className="text-2xl font-bold text-slate-900 mt-1">{stat.value}</p>
              </div>
            </div>
          );
        })}
      </div>

      {/* Tab Navigation */}
      <div className="bg-white rounded-lg shadow-sm border border-slate-200">
        <div className="border-b border-slate-200">
          <nav className="flex space-x-8 px-6">
            <button
              onClick={() => setActiveTab('internal')}
              className={`py-4 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'internal'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'
              }`}
            >
              Internal Vulnerabilities
            </button>
            <button
              onClick={() => setActiveTab('external')}
              className={`py-4 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'external'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'
              }`}
            >
              External Scanning
            </button>
            <button
              onClick={() => setActiveTab('remediation')}
              className={`py-4 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'remediation'
                  ? 'border-blue-500 text-blue-600'
                  : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300'
              }`}
            >
              Remediation Playbooks
            </button>
          </nav>
        </div>

        <div className="p-6">
          {/* Internal Vulnerabilities Tab */}
          {activeTab === 'internal' && (
            <div className="space-y-6">
              <div className="flex items-center justify-between">
                <h2 className="text-lg font-semibold text-slate-900">Internal Vulnerability Scan Results</h2>
                <div className="flex items-center space-x-3">
                  <select
                    value={severityFilter}
                    onChange={(e) => setSeverityFilter(e.target.value)}
                    className="px-3 py-2 border border-slate-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="all">All Severity</option>
                    <option value="critical">Critical</option>
                    <option value="high">High</option>
                    <option value="medium">Medium</option>
                    <option value="low">Low</option>
                  </select>
                </div>
              </div>

              <div className="space-y-4">
                {internalVulnerabilities.map((vuln) => (
                  <div key={vuln.id} className="p-6 bg-slate-50 rounded-lg border border-slate-200">
                    <div className="flex items-start justify-between mb-4">
                      <div className="flex-1">
                        <div className="flex items-center space-x-3 mb-2">
                          <h3 className="font-semibold text-slate-900">{vuln.title}</h3>
                          <span className={`px-2 py-1 rounded text-xs font-medium ${getSeverityColor(vuln.severity)}`}>
                            {vuln.severity}
                          </span>
                          <span className="px-2 py-1 bg-slate-200 text-slate-700 text-xs rounded font-mono">
                            {vuln.id}
                          </span>
                          <span className={`px-2 py-1 rounded text-xs font-medium ${getStatusColor(vuln.status)}`}>
                            {vuln.status}
                          </span>
                          {vuln.exploitAvailable && (
                            <span className="px-2 py-1 bg-red-600 text-white text-xs rounded">
                              Exploit Available
                            </span>
                          )}
                        </div>
                        <p className="text-slate-600 mb-4">{vuln.description}</p>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4">
                          <div>
                            <p className="text-sm font-medium text-slate-600">CVSS Score</p>
                            <p className="text-lg font-bold text-slate-900">{vuln.cvssScore}</p>
                          </div>
                          <div>
                            <p className="text-sm font-medium text-slate-600">Category</p>
                            <p className="text-slate-900">{vuln.category}</p>
                          </div>
                          <div>
                            <p className="text-sm font-medium text-slate-600">Published</p>
                            <p className="text-slate-900">{vuln.publishedDate}</p>
                          </div>
                          <div>
                            <p className="text-sm font-medium text-slate-600">Discovered</p>
                            <p className="text-slate-900">{vuln.discoveredDate}</p>
                          </div>
                        </div>
                        
                        <div className="mb-4">
                          <p className="text-sm font-medium text-slate-600 mb-2">Affected Assets</p>
                          <div className="flex flex-wrap gap-2">
                            {vuln.affectedAssets.map((asset, idx) => (
                              <span key={idx} className="px-3 py-1 bg-blue-100 text-blue-700 text-sm rounded">
                                {asset}
                              </span>
                            ))}
                          </div>
                        </div>
                        
                        <div className="p-3 bg-green-50 rounded-lg border border-green-200">
                          <div className="flex items-center space-x-2 mb-1">
                            <CheckCircle2 className="h-4 w-4 text-green-600" />
                            <span className="text-sm font-medium text-green-700">Recommended Solution</span>
                          </div>
                          <p className="text-sm text-green-700">{vuln.solution}</p>
                        </div>
                      </div>
                      
                      <div className="flex flex-col space-y-2 ml-4">
                        <button className="bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700 transition-colors">
                          View Details
                        </button>
                        <button className="bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700 transition-colors">
                          Start Remediation
                        </button>
                        <button className="flex items-center space-x-1 bg-slate-600 text-white px-3 py-1 rounded text-sm hover:bg-slate-700 transition-colors">
                          <ExternalLink className="h-3 w-3" />
                          <span>CVE Details</span>
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* External Scanning Tab */}
          {activeTab === 'external' && (
            <div className="space-y-6">
              <div className="flex items-center justify-between">
                <h2 className="text-lg font-semibold text-slate-900">External Web Application Scanning</h2>
                <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                  Start External Scan
                </button>
              </div>

              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {externalVulnerabilities.map((domain, index) => (
                  <div key={index} className="p-6 bg-slate-50 rounded-lg border border-slate-200">
                    <div className="flex items-center space-x-2 mb-4">
                      <Globe className="h-5 w-5 text-blue-600" />
                      <h3 className="font-semibold text-slate-900">{domain.domain}</h3>
                    </div>
                    
                    <div className="space-y-3">
                      {domain.findings.map((finding, idx) => (
                        <div key={idx} className="p-3 bg-white rounded border border-slate-200">
                          <div className="flex items-center justify-between mb-2">
                            <h4 className="font-medium text-slate-900">{finding.title}</h4>
                            <span className={`px-2 py-1 rounded text-xs font-medium ${getSeverityColor(finding.severity)}`}>
                              {finding.severity}
                            </span>
                          </div>
                          <p className="text-sm text-slate-600 mb-2">{finding.description}</p>
                          <div className="p-2 bg-blue-50 rounded border border-blue-200">
                            <p className="text-sm text-blue-700">
                              <strong>Remediation:</strong> {finding.remediation}
                            </p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* Remediation Playbooks Tab */}
          {activeTab === 'remediation' && (
            <div className="space-y-6">
              <div className="flex items-center justify-between">
                <h2 className="text-lg font-semibold text-slate-900">Remediation Playbooks</h2>
                <button className="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors">
                  Create Custom Playbook
                </button>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {remediationPlaybooks.map((playbook, index) => (
                  <div key={index} className="p-6 bg-white rounded-lg border border-slate-200 hover:border-blue-300 transition-colors">
                    <div className="flex items-center justify-between mb-4">
                      <h3 className="font-semibold text-slate-900">{playbook.title}</h3>
                      {playbook.automationAvailable && (
                        <span className="px-2 py-1 bg-green-100 text-green-700 text-xs rounded font-medium">
                          Automated
                        </span>
                      )}
                    </div>
                    
                    <p className="text-sm text-slate-600 mb-4">{playbook.description}</p>
                    
                    <div className="space-y-2 mb-4">
                      <div className="flex justify-between text-sm">
                        <span className="text-slate-600">Estimated Time:</span>
                        <span className="font-medium text-slate-900">{playbook.estimatedTime}</span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-slate-600">Difficulty:</span>
                        <span className={`font-medium ${
                          playbook.difficulty === 'Low' ? 'text-green-600' :
                          playbook.difficulty === 'Medium' ? 'text-yellow-600' : 'text-red-600'
                        }`}>
                          {playbook.difficulty}
                        </span>
                      </div>
                      <div className="flex justify-between text-sm">
                        <span className="text-slate-600">Affected Systems:</span>
                        <span className="font-medium text-slate-900">{playbook.affectedSystems}</span>
                      </div>
                    </div>
                    
                    <div className="flex space-x-2">
                      <button className="flex-1 bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition-colors">
                        Execute
                      </button>
                      <button className="px-3 py-2 border border-slate-200 rounded hover:bg-slate-50 transition-colors">
                        <Target className="h-4 w-4 text-slate-600" />
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityManagement;